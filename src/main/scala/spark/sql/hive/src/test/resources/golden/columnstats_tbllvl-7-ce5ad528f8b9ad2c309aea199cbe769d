ABSTRACT SYNTAX TREE:
  (TOK_ANALYZE (TOK_TAB (TOK_TABNAME empty_tab)) (TOK_TABCOLNAME a b c d e))

STAGE DEPENDENCIES:
  Stage-0 is a root stage
  Stage-1 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Map Reduce
      Alias -> Map Operator Tree:
        empty_tab 
          TableScan
            alias: empty_tab
            Select Operator
              expressions:
                    expr: a
                    type: int
                    expr: b
                    type: double
                    expr: c
                    type: string
                    expr: d
                    type: boolean
                    expr: e
                    type: binary
              outputColumnNames: a, b, c, d, e
              Group By Operator
                aggregations:
                      expr: compute_stats(a, 16)
                      expr: compute_stats(b, 16)
                      expr: compute_stats(c, 16)
                      expr: compute_stats(d, 16)
                      expr: compute_stats(e, 16)
                bucketGroup: false
                mode: hash
                outputColumnNames: _col0, _col1, _col2, _col3, _col4
                Reduce Output Operator
                  sort order: 
                  tag: -1
                  value expressions:
                        expr: _col0
                        type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,bitvector:string,numbitvectors:int>
                        expr: _col1
                        type: struct<columntype:string,min:double,max:double,countnulls:bigint,bitvector:string,numbitvectors:int>
                        expr: _col2
                        type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint,bitvector:string,numbitvectors:int>
                        expr: _col3
                        type: struct<columntype:string,counttrues:bigint,countfalses:bigint,countnulls:bigint>
                        expr: _col4
                        type: struct<columntype:string,maxlength:bigint,sumlength:bigint,count:bigint,countnulls:bigint>
      Reduce Operator Tree:
        Group By Operator
          aggregations:
                expr: compute_stats(VALUE._col0)
                expr: compute_stats(VALUE._col1)
                expr: compute_stats(VALUE._col2)
                expr: compute_stats(VALUE._col3)
                expr: compute_stats(VALUE._col4)
          bucketGroup: false
          mode: mergepartial
          outputColumnNames: _col0, _col1, _col2, _col3, _col4
          Select Operator
            expressions:
                  expr: _col0
                  type: struct<columntype:string,min:bigint,max:bigint,countnulls:bigint,numdistinctvalues:bigint>
                  expr: _col1
                  type: struct<columntype:string,min:double,max:double,countnulls:bigint,numdistinctvalues:bigint>
                  expr: _col2
                  type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint,numdistinctvalues:bigint>
                  expr: _col3
                  type: struct<columntype:string,counttrues:bigint,countfalses:bigint,countnulls:bigint>
                  expr: _col4
                  type: struct<columntype:string,maxlength:bigint,avglength:double,countnulls:bigint>
            outputColumnNames: _col0, _col1, _col2, _col3, _col4
            File Output Operator
              compressed: false
              GlobalTableId: 0
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-1
    Column Stats Work
      Column Stats Desc:
          Columns: a, b, c, d, e
          Column Types: int, double, string, boolean, binary
          Table: empty_tab

